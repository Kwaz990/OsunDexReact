{
  "name": "osun_dex_react",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "react": "^16.6.3",
    "react-dom": "^16.6.3",
    "react-router-dom": "^4.3.1",
    "react-scripts": "2.1.1",
    "react-tradingview-widget": "^1.3.0",
    "react-web3": "^1.2.0",
    "stringify": "^5.2.0",
    "0x.js": "^2.0.0",
    "@0x/abi-gen-wrappers": "^1.0.1",
    "@0x/connect": "^3.0.7",
    "@0x/contract-addresses": "^1.0.1",
    "@0x/contract-artifacts": "^1.0.1",
    "@0x/subproviders": "^2.1.5",
    "@0x/web3-wrapper": "^3.1.0",
    "body-parser": "^1.18.3",
    "cli-table": "^0.3.1",
    "copyfiles": "^2.0.0",
    "enroute": "^1.0.1",
    "express": "^4.16.3",
    "history": "^4.7.2",
    "html-to-react": "^1.3.3",
    "http": "^0.0.0",
    "lodash": "^4.17.5",
    "node-libcurl": "^1.3.3",
    "ora": "^2.1.0",
    "run-s": "^0.0.0",
    "save": "^2.3.2",
    "truffle-contract": "^4.0.0-next.0",
    "web3": "^1.0.0-beta.35",
    "websocket": "^1.0.26"
  },
  "devDependencies": {
    "@0x/dev-utils": "^1.0.7",
    "@0x/tslint-config": "^1.0.7",
    "@types/body-parser": "^1.17.0",
    "@types/express": "^4.16.0",
    "@types/lodash": "^4.14.116",
    "@types/websocket": "^0.0.39",
    "cross-env": "^5.1.4",
    "download-cli": "^1.0.5",
    "ethereum-types": "^1.0.5",
    "ganache-cli": "^6.1.6",
    "lite-server": "^2.4.0",
    "make-promises-safe": "^1.1.0",
    "npm-run-all": "^4.1.2",
    "shx": "^0.2.2",
    "tslint": "5.11.0",
    "typescript": "3.0.1",
    "run-script-os": "^1.0.3"
  },
  "scripts": {
    "start": "react-scripts start",
    "build_react": "react-scripts build",
    "eject": "react-scripts eject",
    "lint": "tslint --format stylish --project . --exclude **/src/generated_contract_wrappers/**/*",
    "watch": "cross-env yarn pre_build && tsc -w",
    "build": "cross-env yarn pre_build && tsc",
    "pre_build": "run-s copy_artifacts",
    "clean": "shx rm -rf lib artifacts",
    "copy_artifacts:comment": "Typescript doesn't copy non-typescript files to `lib`, so we need to copy the artifact JSONs ourselves.",
    "copy_artifacts": "copyfiles -u 1 './src/artifacts/**/*' ./lib",
    "download_snapshot": "cross-env-shell download --extract --strip 1 --out 0x_ganache_snapshot ${npm_package_config_snapshot_url}",
    "ganache-cli": "cross-env ganache-cli --gasLimit 10000000 --noVMErrorsOnRPCResponse --db 0x_ganache_snapshot --noVMErrorsOnRPCResponse -p 8545 --networkId 50 -m \"concert load couple harbor equip island argue ramp clarify fence smart topic\"",
    "fake_sra_server": "cross-env yarn build && node ./lib/sra_server.js",
    "scenario:all": "cross-env yarn build && node ./lib/scenarios/all.js",
    "scenario:fill_order_erc20": "cross-env yarn build && node ./lib/scenarios/fill_order_erc20.js",
    "scenario:fill_order_sra": "cross-env yarn build && node ./lib/scenarios/fill_order_sra.js",
    "scenario:fill_order_fees": "cross-env yarn build && node ./lib/scenarios/fill_order_fees.js",
    "scenario:fill_order_erc721": "cross-env yarn build && node ./lib/scenarios/fill_order_erc721.js",
    "scenario:match_orders": "cross-env yarn build && node ./lib/scenarios/match_orders.js",
    "scenario:mint_tokens": "cross-env yarn build && node ./lib/scenarios/mint_tokens.js",
    "scenario:execute_transaction": "cross-env yarn build && node ./lib/scenarios/execute_transaction.js",
    "scenario:execute_transaction_cancel_order": "cross-env yarn build && node ./lib/scenarios/execute_transaction_cancel_order.js",
    "scenario:cancel_orders_up_to": "cross-env yarn build && node ./lib/scenarios/cancel_orders_up_to.js",
    "scenario:forwarder_buy_erc20_tokens": "cross-env yarn build && node ./lib/scenarios/forwarder_buy_erc20_tokens.js",
    "scenario:forwarder_buy_erc721_tokens": "cross-env yarn build && node ./lib/scenarios/forwarder_buy_erc721_tokens.js",
    "scenario:exchange_subscribe": "cross-env yarn build && node ./lib/scenarios/exchange_subscribe.js",
    "dev": "lite-server",
    "test": "react-scripts test --env=jsdom",
    "link-contracts": "run-script-os",
    "link-contracts:linux:darwin": "cd src && ln -s ../../build/contracts contracts",
    "link-contracts:win32": "cd src && mklink \\D contracts ..\\..\\build\\contracts"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ]
}
